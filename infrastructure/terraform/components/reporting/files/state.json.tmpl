{
  "Comment": "Workflow to run ingestion queries to populate reporting tables from the underlying transaction_history table in the core account.",
  "StartAt": "Parallel Queries",
  "States": {
    "Parallel Queries": {
      "Type": "Parallel",
      "Branches": ${jsonencode([
        for query_id in query_ids:
        {
          "StartAt": "Get Query ${query_id}",
          "States": {
            "Get Query ${query_id}": {
              "Type": "Task",
              "Parameters": {
                "NamedQueryId": "${query_id}"
              },
              "Resource": "arn:aws:states:::aws-sdk:athena:getNamedQuery",
              "Next": "Execute Query ${query_id}"
            },
            "Execute Query ${query_id}": {
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString.$": "$.NamedQuery.QueryString",
                "WorkGroup.$": "$.NamedQuery.WorkGroup",
                "QueryExecutionContext": {
                  "Database.$": "$.NamedQuery.Database"
                }
              },
              "Type": "Task",
              "Next": "Transaction Success ${query_id}",
              "Catch": [
                {
                  "ErrorEquals": [
                    "States.ALL"
                  ],
                  "ResultPath": "$.error",
                  "Next": "Transaction Failed ${query_id}"
                }
              ]
            },
            "Transaction Success ${query_id}": {
              "Type": "Pass",
              "Result": "Athena query succeeded.",
              "End": true
            },
            "Transaction Failed ${query_id}": {
              "Type": "Fail",
              "CausePath": "$.error.Cause",
              "ErrorPath": "$.error.Error"
            }
          }
        }
      ])},
      "End": true
    }
  }
}
