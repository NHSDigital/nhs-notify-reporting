{
  "Comment": "Workflow to generate the completed batch report.",
  "StartAt": "Select Client Ids",
  "States": {
    "Select Client Ids": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.clientIds",
          "IsPresent": true,
          "Next": "Get Client Ids From Args"
        }
      ],
      "Default": "Get Client Ids From SSM"
    },
    "Get Client Ids From Args": {
      "Type": "Pass",
      "Next": "Exit if No Clients",
      "ResultPath": "$.useClientIds",
      "Parameters": {
        "clientIds.$": "$.clientIds"
      }
    },
    "Exit if No Clients": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.useClientIds.clientIds[0]",
          "IsPresent": false,
          "Next": "No Clients Found"
        }
      ],
      "Default": "Select Completed Batch Ids"
    },
    "No Clients Found": {
      "Type": "Pass",
      "End": true
    },
    "Get Client Ids From SSM": {
      "Type": "Task",
      "Parameters": {
        "Name": "/${environment}/completed-batch-report/clientIds"
      },
      "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter",
      "Next": "Exit if No Clients",
      "ResultSelector": {
        "clientIds.$": "States.StringToJson($.Parameter.Value)"
      },
      "ResultPath": "$.useClientIds"
    },
    "Select Completed Batch Ids": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.completedBatchIds",
          "IsPresent": true,
          "Next": "Get Completed Batch Ids From Args"
        }
      ],
      "Default": "Get Completed Batch Ids Query"
    },
    "Get Completed Batch Ids From Args": {
      "Type": "Pass",
      "Next": "Get Report Query",
      "Parameters": {
        "completedBatchIds.$": "$.completedBatchIds"
      },
      "ResultPath": "$.useCompletedBatchIds"
    },
    "Get Completed Batch Ids Query": {
      "Type": "Task",
      "Parameters": {
        "NamedQueryId": "${date_query_id}"
      },
      "Resource": "arn:aws:states:::aws-sdk:athena:getNamedQuery",
      "Next": "Execute Completed Batch Ids Query",
      "ResultPath": "$.DateQuery"
    },
    "Execute Completed Batch Ids Query": {
      "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
      "Parameters": {
        "QueryString.$": "$.DateQuery.NamedQuery.QueryString",
        "WorkGroup.$": "$.DateQuery.NamedQuery.WorkGroup",
        "QueryExecutionContext": {
          "Database.$": "$.DateQuery.NamedQuery.Database"
        }
      },
      "Type": "Task",
      "Next": "Get Completed Batch Ids From Query Results",
      "ResultPath": "$.DateQueryExecution"
    },
    "Get Completed Batch Ids From Query Results": {
      "Type": "Task",
      "Resource": "arn:aws:states:::athena:getQueryResults",
      "Parameters": {
        "QueryExecutionId.$": "$.DateQueryExecution.QueryExecution.QueryExecutionId"
      },
      "Next": "Get Report Query",
      "ResultPath": "$.useCompletedBatchIds",
      "ResultSelector": {
        "completedBatchIds.$": "$.ResultSet.Rows[1].Data[0].VarCharValue"
      }
    },
    "Get Report Query": {
      "Type": "Task",
      "Parameters": {
        "NamedQueryId": "${report_query_id}"
      },
      "Resource": "arn:aws:states:::aws-sdk:athena:getNamedQuery",
      "Next": "For Each Client Id",
      "ResultPath": "$.ReportQuery"
    },
    "For Each Client Id": {
      "Type": "Map",
      "ItemsPath": "$.useClientIds.clientIds",
      "ItemSelector": {
        "clientId.$": "$$.Map.Item.Value",
        "completedBatchIds.$": "$.useCompletedBatchIds.completedBatchIds",
        "ReportQuery.$": "$.ReportQuery"
      },
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Execute Report Query",
        "States": {
          "Execute Report Query": {
            "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
            "Parameters": {
              "QueryString.$": "$.ReportQuery.NamedQuery.QueryString",
              "ExecutionParameters.$": "States.Array($.clientId, States.Format('\\'{}\\'', $.completedBatchIds), States.Format('\\'{}\\'', $.completedBatchIds))",
              "WorkGroup.$": "$.ReportQuery.NamedQuery.WorkGroup",
              "QueryExecutionContext": {
                "Database.$": "$.ReportQuery.NamedQuery.Database"
              },
              "ResultConfiguration": {
                "OutputLocation.$": "States.Format('${output_root}{}/{}/', $.clientId, $.completedBatchIds)"
              }
            },
            "Type": "Task",
            "Next": "Transaction Success",
            "Catch": [
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "ResultPath": "$.error",
                "Next": "Transaction Failed"
              }
            ]
          },
          "Transaction Success": {
            "Type": "Pass",
            "Result": "Athena query succeeded.",
            "End": true
          },
          "Transaction Failed": {
            "Type": "Fail",
            "CausePath": "$.error.Cause",
            "ErrorPath": "$.error.Error"
          }
        }
      },
      "End": true
    }
  }
}
