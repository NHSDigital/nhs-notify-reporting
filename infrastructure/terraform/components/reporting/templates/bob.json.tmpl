{
  "Comment": "Workflow to run bob query.",
  "StartAt": "Select Client Ids",
  "States": {
    "Select Client Ids": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.clientIds",
          "IsPresent": true,
          "Next": "Pass"
        }
      ],
      "Default": "Get Client Ids From SSM"
    },
    "Get Client Ids From SSM": {
      "Type": "Task",
      "Parameters": {
        "Name": "/${environment}/bob/clientIds"
      },
      "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter",
      "Next": "Pass",
      "ResultSelector": {
        "clientIds.$": "States.StringToJson($.Parameter.Value)"
      }
    },
    "Pass": {
      "Type": "Pass",
      "Next": "For Each Client Id"
    },
    "For Each Client Id": {
      "Type": "Map",
      "ItemsPath": "$.clientIds",
      "ItemSelector": {
        "clientId.$": "$$.Map.Item.Value"
      },
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Get Query",
        "States": {
          "Get Query": {
            "Type": "Task",
            "Parameters": {
              "NamedQueryId": "${query_id}"
            },
            "Resource": "arn:aws:states:::aws-sdk:athena:getNamedQuery",
            "Next": "Execute Query",
            "ResultPath": "$.Retrieved"
          },
          "Execute Query": {
            "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
            "Parameters": {
              "QueryString.$": "$.Retrieved.NamedQuery.QueryString",
              "ExecutionParameters.$": "States.Array($.clientId, 'NULL', 'NULL')",
              "WorkGroup.$": "$.Retrieved.NamedQuery.WorkGroup",
              "QueryExecutionContext": {
                "Database.$": "$.Retrieved.NamedQuery.Database"
              },
              "ResultConfiguration": {
                   "OutputLocation.$": "States.Format('${output_root}{}/', $.clientId)"
              }
            },
            "Type": "Task",
            "Next": "Transaction Success",
            "Catch": [
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "ResultPath": "$.error",
                "Next": "Transaction Failed"
              }
            ]
          },
          "Transaction Success": {
            "Type": "Pass",
            "Result": "Athena query succeeded.",
            "End": true
          },
          "Transaction Failed": {
            "Type": "Fail",
            "CausePath": "$.error.Cause",
            "ErrorPath": "$.error.Error"
          }
        }
      },
      "End": true
    }
  }
}
